#!/bin/bash

# Generated by wiktts.trainer
# Version 0.0.8
# Date 2016-05-31

BASE="{BASE}"
TRAIN="{BASE}.train"
TEST="{BASE}.test"
WORDS="{BASE}.words"
TRAINWORDS="$TRAIN.words"
TESTWORDS="$TEST.words"

LOG="{BASE}.phonetisaurus.log"
CORPUS="{BASE}.corpus"
ARPA="{BASE}.arpa"
MODEL="{BASE}.fst"
PREFIX="{BASE}"
NGRAMORDER="{NGRAMORDER}"
SMOOTHING="{SMOOTHING}"
DECODER="{DECODER}"
VARIANTS="{VARIANTS}"

### NORMALLY YOU SHOULD NOT NEED TO EDIT BELOW THIS LINE

usage() {{
    echo ""
    echo "$ bash $0 train"
    echo "$ bash $0 test"
    echo "$ bash $0 apply FILE [VARIANTS]"
    echo "$ bash $0 clean"
    echo ""
    echo "Parameters:"
    echo "  ngramorder: {NGRAMORDER}"  
    echo "  smoothing:  {SMOOTHING}"  
    echo "  decoder:    {DECODER}"  
    echo "  variants:   {VARIANTS}"
    echo ""
    exit 2
}}

run_train() {{
    START=`date +%s`
    echo "" >> $LOG
    echo "==============================" >> $LOG
    echo "Training model..." | tee -a $LOG
    echo "" >> $LOG
    
    echo "Calling phonetisaurus-align..."
    phonetisaurus-align --input=$TRAIN --ofile=$CORPUS --seq1_del=false 2>> $LOG >> $LOG
    if [ ! -e "$CORPUS" ]
    then
        echo "[ERROR] CORPUS file $CORPUS not created. Aborting."
        exit 1
    fi
    echo "Calling phonetisaurus-align... done"
    echo ""
    
    echo "Calling estimate-ngram..."
    estimate-ngram -t $CORPUS -o $NGRAMORDER -s $SMOOTHING -wl $ARPA 2>> $LOG >> $LOG
    if [ ! -e "$ARPA" ]
    then
        echo "[ERROR] ARPA file $ARPA not created. Aborting."
        exit 1
    fi
    echo "Calling estimate-ngram... done"
    echo ""

    echo "Calling phonetisaurus-arpa2wfst-omega..."
    phonetisaurus-arpa2wfst-omega --lm=$ARPA --ofile=$MODEL 2>> $LOG >> $LOG
    if [ ! -e "$MODEL" ]
    then
        echo "[ERROR] MODEL file $MODEL not created. Aborting."
        exit 1
    fi
    echo "Calling phonetisaurus-arpa2wfst-omega... done"
    echo ""

    END=`date +%s`
    DIFF=`echo "$END - $START" | bc`
    echo "" >> $LOG
    echo "Training model... done in $DIFF s" | tee -a $LOG
    echo "==============================" >> $LOG
    echo "" >> $LOG
}}

run_test() {{
    if [ ! -e "$MODEL" ]
    then
        echo "[ERROR] To test you need file $MODEL (i.e., train first)"
        exit 1
    fi
    phonetisaurus-calculateER-omega --testfile=$TEST --modelfile=$MODEL --prefix=$PREFIX --decoder_type=$DECODER 
}}

run_apply() {{
    F=$1
    V=$2
    if [ ! -e "$MODEL" ]
    then
        echo "[ERROR] To test you need file $MODEL (i.e., train first)"
        exit 1
    fi
    A="$F.applied"
    ALOG="$A.log"
    if [ "$V" -gt 1 ]
    then
        # TODO: --scores=false does not seem to work!
        phonetisaurus-g2p-omega --input=$F --isfile=true --model=$MODEL --decoder_type=$DECODER --scores=false --nbest=$V > "$A" 2> "$ALOG"
    else
        phonetisaurus-g2p-omega --input=$F --isfile=true --model=$MODEL --decoder_type=$DECODER --scores=false > "$A" 2> "$ALOG"
    fi
    echo "[INFO] Logged errors to file $ALOG"
    echo "[INFO] Created file $A"
}}

run_clean() {{
    rm -f $TRAIN.*
    rm -f $TEST.*
    rm -f $CORPUS
    rm -f $ARPA
    rm -f $MODEL
    rm -f $PREFIX.words
    rm -f $PREFIX.hyp
    rm -f $PREFIX.ref
}}

if [ "$#" -lt 1 ]
then
    usage
fi
COMMAND=$1

if [ "$COMMAND" == "clean" ]
then
    run_clean
    exit 0
fi

if [ "$COMMAND" == "train" ]
then
    rm -f $LOG
    run_train
    exit 0
fi

if [ "$COMMAND" == "test" ]
then
    run_test
    exit 0
fi

if [ "$COMMAND" == "apply" ]
then
    if [ "$#" -lt 2 ]
    then
        usage
    fi
    FILE=$2

    VAR=$VARIANTS
    if [ "$#" -ge 3 ]
    then
        VAR=$3
    fi

    run_apply $FILE $VAR
    exit 0
fi

usage



